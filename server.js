const fs = require('fs');
const inquirer = require('inquirer');
const express = require('express');
const mysql = require ('mysql2');
const cTable = require('console.table');

const PORT = process.env.PORT || 3001;
const app = express();

app.use(express.urlencoded({ extended: false }));
app.use(express.json());

const db = mysql.createConnection(
    {
        host: 'localhost',
        user: 'root',
        password: 'Treehouse',
        database: 'business_db',
        rowsAsArray: true
    },
    console.log(`Connected to the business_db database`)
);


const initQuestions = [
    {
        type: 'list',
        name: 'intro',
        message: "Hello! What would you like to do?",
        choices:["View all departments", "View all roles", "View all employees", "Add a department", "Add a role", "Add an employee", "Update an employee role"]
    },
];

const addDepartment = [
    {
        type:'input',
        name: 'dept_name',
        message: "What department would you like to add?"
    },
];

const addRole = [
    {
        type:'input',
        name: 'title',
        message: "What role would you like to add?"
    },
    {
        type:'input',
        name: 'salary',
        message: "How much does this role earn?"
    },
    // {
    //     type:'list',
    //     name: 'department_id',
    //     message: "What department ID should this role have?",
    //     choices: function()
    // }
];

const addEmployee = [
    {
        type:'input',
        name: 'first_name',
        message: "What is the employee's first name?"
    },
    {
        type:'input',
        name: 'last_name',
        message: "What is the employee's last name?"
    },
    // {
    //     type:'list',
    //     name: 'role_id',
    //     message: "What role ID will this employee have?",
    //     choices: function
    // },
        // {
    //     type:'list',
    //     name: 'manager_id',
    //     message: "Who will be this employee's manager?",
    //     choices: function
    // },
];



// Response is an object generated by Inquirer.prompt
function initSwitch(response){
    switch(response.intro){
        case "View all departments": 
        db.query('SELECT * FROM department',   function(err, results){
            console.table(results);
        }); 
        ask(initQuestions);
        break;
        case "View all roles": 
        db.query('SELECT * FROM role',   function(err, results){
            console.table(results);
        }); 
        ask(initQuestions);
        break;
        case "View all employees": 
        db.query('SELECT * FROM employee',   function(err, results){
            console.table(results);
        }); 
        ask(initQuestions);
        break;
        case "Add a department": 
            ask(addDepartment)
        break;
        case "Add a role": 
            ask(addRole)
        break;
        case "Add an employee": 
            ask(addEmployee)
        break;
        case "Update an employee role": 
        console.log("case 7");
        break;
        default:
            console.log("Something is up with the switch")
}};

function add_Department(response){
    console.log('add dept', response)
    ask(initQuestions)
};

function add_Role(response){
    console.log('add role', response)
    ask(initQuestions)
};

function add_Employee(response){
    console.log('add employee', response)
    ask(initQuestions)
};

// function updateEmployee();

function ask(array) {
    inquirer.prompt(array)
    .then((response) => {
        console.log(response)
        if(array === initQuestions){
            initSwitch(response)}
        else if(response.dept_name){
            add_Department(response)
        }else if(response.title){
            add_Role(response);
        }else{
            add_Employee(response);
        }
        return
    })
};

function init(){
    db;

    ask(initQuestions);
};

app.use((req, res) => {
    res.status(404).end();
})
app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
})

init();
